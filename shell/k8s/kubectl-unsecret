#!/usr/bin/env bash

# =========================================================================
#
# USAGE
#     kubectl-unsecret [KUBECTL_OPTIONS] [-- [PERL_FILTER]]
#
# DESCRIPTION
# Discover kubernetes secrets
#
# PREREQUISITES
# - kubectl
# - jq
# - bash
# - printf, grep, awk
#
# TODO
# Rewrite to print in the form as key:[value]
#
# =========================================================================

main() {
	parse_options "$@"

	kubectl_get_secrets "${@:1:$n-1}" \
	| unsecret "${@:$n+1}"
}

# =========================================================================

parse_options() {
	n="$( minus_minus_argument_position "$@" )"

	jq_root=''
	printf '%s\n' "${@:1:$n-1}" | grep -q '^[^-]' \
	|| jq_root='.items[]'
}

minus_minus_argument_position() {
	[ $# -gt 0 ] || { echo "1" ; return ; }

	printf '%s\n' "$@" \
	| awk '/^--$/ && ! p { p = NR } END { print p ? p : NR + 1 }'
}

# =========================================================================

kubectl_get_secrets() {
	kubectl get secrets "$@" -o json
}

unsecret() {
	jq -r "\
${jq_root}.data
| select(.)
| with_entries(
	select(
		.key
		| test(\"${1:-.}\")
	) | {
		key: .key,
		value: .value | @base64d
	}
) | select(. != {})"
}

# =========================================================================

main "$@"

# =========================================================================

# EOF
