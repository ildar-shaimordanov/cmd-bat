#!/bin/sh

# =========================================================================
#
# Copyright (C) 2024 Ildar Shaimordanov
# MIT License
#
# =========================================================================

print_usage() {
	echo "\
Usage: bulkping [OPTIONS] [HOST ...]
Ping multiple targets in parallel.

Options
	-f FILE	Read hosts from the FILE instead of stdin
	-m MAX	Ping at most MAX hosts at a time.
		0 (default) means pinging as many as possible at a time.
		Empty string means to ping sequentially.
	-x	Debug mode: display each pinging set of commands
"
}

# =========================================================================

MAX_PINGS=0
PING_FILE=''
DEBUG_PING=''

bulkping() {
	# Windows has its own version of ping utility with its own set
	# of options. Let's take it into account and provide all the
	# arguments correctly. It affects on execution under BusyBox.
	case "$( uname -s )" in
	Window*	) set -- -n 1 ;;
	*	) set -- -n -c 1 ;;
	esac

	# shellcheck disable=SC2016
	xargs ${MAX_PINGS:+-P "$MAX_PINGS"} -r ${PING_FILE:+-a "$PING_FILE"} \
	-IX sh ${DEBUG_PING:+-x} \
	-c 'R=OK ; ping "$@" "X" >/dev/null 2>&1 || R=FAIL ; echo "X $R"' \
	- "$@"
}

# =========================================================================

while getopts ':f:m:x' arg
do
	case "$arg" in
	f ) PING_FILE="$OPTARG" ;;
	m ) MAX_PINGS="$OPTARG" ;;
	x ) DEBUG_PING=1 ;;
	: ) echo "Argument is required: -$OPTARG" >&2 ; exit 1 ;;
	* ) echo "Bad option: -$OPTARG" >&2 ; exit 1 ;;
	esac
done

shift $(( OPTIND - 1 ))

[ -t 0 ] && [ $# -eq 0 ] && [ -z "$PING_FILE" ] && {
	print_usage
	exit
}

if [ $# -eq 0 ]
then
	bulkping
else
	# Command line arguments have higher priority even if the file
	# is specified. So we clean the variable holding the filename
	# to apply the arguments only.
	PING_FILE=''
	printf '%s\n' "$@" | bulkping
fi

# =========================================================================

# +++
#
# Read hosts from stdin, file or command line and do ping towards them in
# parallel. Print to stderr the hosts that return errors when ping them.
#
# Example:
#
#     printf '%s\n' goo.gl goog.le | bulkping
#
# Requirements:
#
# * sh
# * uname
# * xargs
# * ping
#
# ---

# =========================================================================

# EOF
