#!/bin/sh

# =========================================================================
#
# Validate the domain certificate
#
# Displays the time period when the certificate is valid
# Estimates the total number of days when the certificate is valid
# Estimates the number of days left until the certificate expires
#
# Copyright (C) 2023 Ildar Shaimordanov
#
# =========================================================================

VERBOSE=""

while getopts ":v" opt
do
	case "$opt" in
	v ) VERBOSE=1 ;;
	* ) echo "Illegal option: $OPTARG" >&2 ; exit 1 ;;
	esac
done

shift $(( OPTIND-1 ))

[ $# -gt 0 ] || {
	echo "\
Usage: $( basename "$0" ) [-v] HOST[:PORT]
Display age of the SSL certificate.
If no port specified, :443 is assumed.
"
	exit 1
}

age_openssl() {
	[ -n "$VERBOSE" ] || exec 2>/dev/null

	openssl s_client -connect "$1" </dev/null \
	| openssl x509 -dates -noout
}

validate_age() {
	awk -v s0="$( date -u +%s )" -F= '
/notBefore/ { t1 = $2 }
/notAfter/  { t2 = $2 }

# Workaround to enable the script working properly in busybox also,
# because of the limited set of the supported TIME formats there.
function bb_compat(v, m, a) {
	m["Jan"] = "01"; m["Feb"] = "02"; m["Mar"] = "03";
	m["Apr"] = "04"; m["May"] = "05"; m["Jun"] = "06";
	m["Jul"] = "07"; m["Aug"] = "08"; m["Sep"] = "09";
	m["Oct"] = "10"; m["Nov"] = "11"; m["Dec"] = "12";

	split(v, a, " ")
	v = a[4] "-" m[a[1]] "-" a[2] " " a[3]
	return v
}

function epoch(v) { "date -d\"" v "\" -u +%s" | getline v; return v }
function days(v1, v2) { return (v2 - v1) / 86400 }

END {
	if ( ! t1 || ! t2 ) {
		print "Error: No data to validate" > "/dev/stderr"
		exit 1
	}

	print "Since:", t1
	print "Until:", t2

	s1 = epoch(bb_compat(t1))
	s2 = epoch(bb_compat(t2))

	printf "Days: %.0f\n", days(s1, s2)

	n = days(s0, s2)
	if ( n > 0 ) {
		printf "Left: %.0f\n", n
	} else {
		printf "Expired: %.0f\n", -n
	}
}'
}

# =========================================================================

[ "$1" = "${1%:*}" ] && set -- "$1:443"

age_openssl "$1" | validate_age

# =========================================================================

# EOF
